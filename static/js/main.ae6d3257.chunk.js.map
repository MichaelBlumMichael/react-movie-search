{"version":3,"sources":["components/Cards.jsx","components/SearchMovies.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","src","movie","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","error","onSubmit","htmlFor","onChange","target","value","type","name","placeholder","filter","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAqBeA,MAnBf,SAAeC,GACb,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEA,UAAU,cACVC,IAAG,0DAAqDF,EAAMG,MAAMC,aACpEC,IAAKL,EAAMG,MAAMG,MAAQ,YAE3B,sBAAKL,UAAU,gBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,EAAMG,MAAMG,QACzC,8BACE,mDAAsBN,EAAMG,MAAMI,gBAClC,6CAAgBP,EAAMG,MAAMK,mBAE9B,mBAAGP,UAAU,oBAAb,SAAkCD,EAAMG,MAAMM,kBCiCvCC,MA9Cf,WAAyB,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEMF,mBAAS,IAFf,mBAEfG,EAFe,KAEPC,EAFO,KAIhBC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBD,EAAEE,iBAEIC,EAHa,kHAGoGR,EAHpG,iDAMCS,MAAMD,GANP,cAMXE,EANW,gBAOEA,EAAIC,OAPN,OAOXC,EAPW,OAQjBT,EAAUS,EAAKC,SARE,kDAUjBC,QAAQC,MAAR,MAViB,0DAAH,sDAclB,OACE,qCACE,uBAAM1B,UAAU,OAAO2B,SAAUZ,EAAjC,UACE,uBAAOa,QAAQ,QAAQ5B,UAAU,QAAjC,4BAGA,uBACE6B,SAAU,SAACb,GAAD,OAAOJ,EAASI,EAAEc,OAAOC,QACnCC,KAAK,OACLC,KAAK,QACLC,YAAY,uBACZH,MAAOpB,IAET,wBAAQX,UAAU,SAASgC,KAAK,SAAhC,uBAIF,qBAAKhC,UAAU,YAAf,SACGa,EACEsB,QAAO,SAACjC,GAAD,OAAWA,EAAMC,eACxBiC,KAAI,SAAClC,GACJ,OAAO,cAAC,EAAD,CAAOA,MAAOA,GAAYA,EAAMmC,aC9BpCC,MATf,WACE,OACE,sBAAKtC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAAC,EAAD,QCKSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae6d3257.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Cards(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        className=\"card--image\"\r\n        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${props.movie.poster_path}`}\r\n        alt={props.movie.title + \" poster\"}\r\n      />\r\n      <div className=\"card--content\">\r\n        <h3 className=\"card--title\">{props.movie.title}</h3>\r\n        <p>\r\n          <small>RELEASE DATE: {props.movie.release_date}</small>\r\n          <small>RATING: {props.movie.vote_average}</small>\r\n        </p>\r\n        <p className=\"card--description\">{props.movie.overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Cards;\r\n","import React, { useState } from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nfunction SearchMovies() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const searchMovies = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=177802aa40ea259e6830e4e66db20e11&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      setMovies(data.results);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={searchMovies}>\r\n        <label htmlFor=\"query\" className=\"label\">\r\n          Search a Movie\r\n        </label>\r\n        <input\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          type=\"text\"\r\n          name=\"query\"\r\n          placeholder=\"Type In A Movie Name\"\r\n          value={query}\r\n        />\r\n        <button className=\"button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"card-list\">\r\n        {movies\r\n          .filter((movie) => movie.poster_path)\r\n          .map((movie) => {\r\n            return <Cards movie={movie} key={movie.id} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchMovies;\r\n","import \"./App.css\";\nimport SearchMovies from \"./components/SearchMovies\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">React Movie Search</h1>\n      <SearchMovies />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}